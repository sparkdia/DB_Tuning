hive> SET hive.auto.convert.join=false;
hive> SET hivevar:ACC_ID = '140137_3';
hive> SET hivevar:ACC_START_DT = '20200805';
hive> EXPLAIN INSERT INTO TEST_DW.ACC_IP_CNTRY_MAPP PARTITION (ACC_ID, ACC_START_DT)
    > SELECT H.IP_ADDR
    >      , G.CNTRY_CD
    >      , G.CNTRY_NM
    >      , H.ACC_ID
    >      , H.ACC_START_DT
    >   FROM (
    >         SELECT IP_ADDR
    >              , COALESCE(SPLIT(IP_ADDR,'\\.')[0], '_')   AS IP_OCTET1
    >              , CAST( SPLIT(IP_ADDR,'\\.')[0] AS BIGINT) * 16777216 +
    >                CAST( SPLIT(IP_ADDR,'\\.')[1] AS BIGINT) * 65536 +
    >                CAST( SPLIT(IP_ADDR,'\\.')[2] AS BIGINT) * 256 +
    >                CAST( SPLIT(IP_ADDR,'\\.')[3] AS BIGINT) AS IP_ADDR_NUMT
    >              , ${ACC_ID}         AS ACC_ID
    >              , ${ACC_START_DT}   AS ACC_START_DT
    >              , CONCAT( SPLIT(IP_ADDR,'\\.')[0], '.', SPLIT(IP_ADDR,'\\.')[1], '.', SPLIT(IP_ADDR,'\\.')[2] ) AS IP_OCTET123_DIV
    >           FROM TEST_ODS.ACC_LOG
    >          WHERE ACC_ID       = ${ACC_ID}
    >            AND ACC_START_DT = ${ACC_START_DT}
    >          GROUP BY IP_ADDR
    >      ) H
    >  INNER JOIN
    >        (
    >         SELECT IP_OCTET1
    >              , IP_OCTET123_DIV
    >              , PART_START_IP_NUMT
    >              , PART_END_IP_NUMT
    >              , CNTRY_CD
    >              , CNTRY_NM
    >           FROM TEST_DW.CNTRY_IP_RANGE_EXTENT
    >      ) G
    >     ON H.IP_OCTET1       = G.IP_OCTET1
    >    AND H.IP_OCTET123_DIV = G.IP_OCTET123_DIV
    >  WHERE H.IP_ADDR_NUMT BETWEEN G.PART_START_IP_NUMT AND G.PART_END_IP_NUMT
    > ;
OK
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 depends on stages: Stage-2
  Stage-3 depends on stages: Stage-0

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: acc_log
            Statistics: Num rows: 10469250 Data size: 2397458250 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ((acc_id = '140137_3') and COALESCE(split(ip_addr, '\.')[0],'_') is not null and concat(split(ip_addr, '\.')[0], '.', split(ip_addr, '\.')[1], '.', split(ip_addr, '\.')[2]) is not null) (type: boolean)
              Statistics: Num rows: 5234625 Data size: 1198729125 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: ip_addr (type: string)
                outputColumnNames: ip_addr
                Statistics: Num rows: 5234625 Data size: 1198729125 Basic stats: COMPLETE Column stats: NONE
                Group By Operator
                  keys: ip_addr (type: string)
                  mode: hash
                  outputColumnNames: _col0
                  Statistics: Num rows: 5234625 Data size: 1198729125 Basic stats: COMPLETE Column stats: NONE
                  Reduce Output Operator
                    key expressions: _col0 (type: string)
                    sort order: +
                    Map-reduce partition columns: _col0 (type: string)
                    Statistics: Num rows: 5234625 Data size: 1198729125 Basic stats: COMPLETE Column stats: NONE
      Reduce Operator Tree:
        Group By Operator
          keys: KEY._col0 (type: string)
          mode: mergepartial
          outputColumnNames: _col0
          Statistics: Num rows: 2617312 Data size: 599364448 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: string), COALESCE(split(_col0, '\.')[0],'_') (type: string), ((((UDFToLong(split(_col0, '\.')[0]) * 16777216) + (UDFToLong(split(_col0, '\.')[1]) * 65536)) + (UDFToLong(split(_col0, '\.')[2]) * 256)) + UDFToLong(split(_col0, '\.')[3])) (type: bigint), concat(split(_col0, '\.')[0], '.', split(_col0, '\.')[1], '.', split(_col0, '\.')[2]) (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 2617312 Data size: 599364448 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              table:
                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe

  Stage: Stage-2
    Map Reduce
      Map Operator Tree:
          TableScan
            Reduce Output Operator
              key expressions: _col1 (type: string), _col3 (type: string)
              sort order: ++
              Map-reduce partition columns: _col1 (type: string), _col3 (type: string)
              Statistics: Num rows: 2617312 Data size: 599364448 Basic stats: COMPLETE Column stats: NONE
              value expressions: _col0 (type: string), _col2 (type: bigint)
          TableScan
            alias: cntry_ip_range_extent
            Statistics: Num rows: 14326293 Data size: 10339799815 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: ip_octet123_div is not null (type: boolean)
              Statistics: Num rows: 14326293 Data size: 10339799815 Basic stats: COMPLETE Column stats: NONE
              Select Operator
                expressions: ip_octet1 (type: string), ip_octet123_div (type: string), part_start_ip_numt (type: bigint), part_end_ip_numt (type: bigint), cntry_cd (type: string), cntry_nm (type: string)
                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5
                Statistics: Num rows: 14326293 Data size: 10339799815 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                  Statistics: Num rows: 14326293 Data size: 10339799815 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col2 (type: bigint), _col3 (type: bigint), _col4 (type: string), _col5 (type: string)
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          keys:
            0 _col1 (type: string), _col3 (type: string)
            1 _col0 (type: string), _col1 (type: string)
          outputColumnNames: _col0, _col2, _col6, _col7, _col8, _col9
          Statistics: Num rows: 15758922 Data size: 11373780043 Basic stats: COMPLETE Column stats: NONE
          Filter Operator
            predicate: _col2 BETWEEN _col6 AND _col7 (type: boolean)
            Statistics: Num rows: 1750991 Data size: 1263753097 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: _col0 (type: string), _col8 (type: string), _col9 (type: string), '140137_3' (type: string), '20200805' (type: string)
              outputColumnNames: _col0, _col1, _col2, _col3, _col4
              Statistics: Num rows: 1750991 Data size: 1263753097 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 1750991 Data size: 1263753097 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                    output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
                    serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
                    name: test_dw.acc_ip_cntry_mapp

  Stage: Stage-0
    Move Operator
      tables:
          partition:
            acc_id
            acc_start_dt
          replace: false
          table:
              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat
              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde
              name: test_dw.acc_ip_cntry_mapp

  Stage: Stage-3
    Stats-Aggr Operator

Time taken: 1.157 seconds, Fetched: 114 row(s)
hive> INSERT INTO TEST_DW.ACC_IP_CNTRY_MAPP PARTITION (ACC_ID, ACC_START_DT)
    > SELECT H.IP_ADDR
    >      , G.CNTRY_CD
    >      , G.CNTRY_NM
    >      , H.ACC_ID
    >      , H.ACC_START_DT
    >   FROM (
    >         SELECT IP_ADDR
    >              , COALESCE(SPLIT(IP_ADDR,'\\.')[0], '_')   AS IP_OCTET1
    >              , CAST( SPLIT(IP_ADDR,'\\.')[0] AS BIGINT) * 16777216 +
    >                CAST( SPLIT(IP_ADDR,'\\.')[1] AS BIGINT) * 65536 +
    >                CAST( SPLIT(IP_ADDR,'\\.')[2] AS BIGINT) * 256 +
    >                CAST( SPLIT(IP_ADDR,'\\.')[3] AS BIGINT) AS IP_ADDR_NUMT
    >              , ${ACC_ID}         AS ACC_ID
    >              , ${ACC_START_DT}   AS ACC_START_DT
    >              , CONCAT( SPLIT(IP_ADDR,'\\.')[0], '.', SPLIT(IP_ADDR,'\\.')[1], '.', SPLIT(IP_ADDR,'\\.')[2] ) AS IP_OCTET123_DIV
    >           FROM TEST_ODS.ACC_LOG
    >          WHERE ACC_ID       = ${ACC_ID}
    >            AND ACC_START_DT = ${ACC_START_DT}
    >          GROUP BY IP_ADDR
    >      ) H
    >  INNER JOIN
    >        (
    >         SELECT IP_OCTET1
    >              , IP_OCTET123_DIV
    >              , PART_START_IP_NUMT
    >              , PART_END_IP_NUMT
    >              , CNTRY_CD
    >              , CNTRY_NM
    >           FROM TEST_DW.CNTRY_IP_RANGE_EXTENT
    >      ) G
    >     ON H.IP_OCTET1       = G.IP_OCTET1
    >    AND H.IP_OCTET123_DIV = G.IP_OCTET123_DIV
    >  WHERE H.IP_ADDR_NUMT BETWEEN G.PART_START_IP_NUMT AND G.PART_END_IP_NUMT
    > ;
WARNING: Hive-on-MR is deprecated in Hive 2 and may not be available in the future versions. Consider using a different execution engine (i.e. tez, spark) or u                                                sing Hive 1.X releases.
Query ID = hduser_20200806023601_a2f15b76-31f6-4d77-9aac-a4d8dc76343c
Total jobs = 2
Launching Job 1 out of 2
Number of reduce tasks not specified. Estimated from input data size: 1
In order to change the average load for a reducer (in bytes):
  set hive.exec.reducers.bytes.per.reducer=<number>
In order to limit the maximum number of reducers:
  set hive.exec.reducers.max=<number>
In order to set a constant number of reducers:
  set mapreduce.job.reduces=<number>
Starting Job = job_1596648768923_0001, Tracking URL = http://hmng:8088/proxy/application_1596648768923_0001/
Kill Command = /usr/local/hadoop-2.10.0/bin/hadoop job  -kill job_1596648768923_0001
Hadoop job information for Stage-1: number of mappers: 1; number of reducers: 1
2020-08-06 02:36:33,517 Stage-1 map = 0%,  reduce = 0%
2020-08-06 02:37:29,979 Stage-1 map = 67%,  reduce = 0%, Cumulative CPU 52.94 sec
2020-08-06 02:37:42,460 Stage-1 map = 83%,  reduce = 0%, Cumulative CPU 65.54 sec
2020-08-06 02:37:46,664 Stage-1 map = 100%,  reduce = 0%, Cumulative CPU 69.28 sec
2020-08-06 02:38:05,641 Stage-1 map = 100%,  reduce = 72%, Cumulative CPU 85.23 sec
2020-08-06 02:38:10,918 Stage-1 map = 100%,  reduce = 83%, Cumulative CPU 91.31 sec
2020-08-06 02:38:17,263 Stage-1 map = 100%,  reduce = 91%, Cumulative CPU 97.32 sec
2020-08-06 02:38:23,598 Stage-1 map = 100%,  reduce = 99%, Cumulative CPU 103.55 sec
2020-08-06 02:38:24,682 Stage-1 map = 100%,  reduce = 100%, Cumulative CPU 104.58 sec
MapReduce Total cumulative CPU time: 1 minutes 44 seconds 580 msec
Ended Job = job_1596648768923_0001
Launching Job 2 out of 2
Number of reduce tasks not specified. Estimated from input data size: 1
In order to change the average load for a reducer (in bytes):
  set hive.exec.reducers.bytes.per.reducer=<number>
In order to limit the maximum number of reducers:
  set hive.exec.reducers.max=<number>
In order to set a constant number of reducers:
  set mapreduce.job.reduces=<number>
Starting Job = job_1596648768923_0002, Tracking URL = http://hmng:8088/proxy/application_1596648768923_0002/
Kill Command = /usr/local/hadoop-2.10.0/bin/hadoop job  -kill job_1596648768923_0002
Hadoop job information for Stage-2: number of mappers: 2; number of reducers: 1
2020-08-06 02:38:45,085 Stage-2 map = 0%,  reduce = 0%
2020-08-06 02:39:06,696 Stage-2 map = 3%,  reduce = 0%, Cumulative CPU 32.13 sec
2020-08-06 02:39:11,923 Stage-2 map = 36%,  reduce = 0%, Cumulative CPU 38.68 sec
2020-08-06 02:39:12,979 Stage-2 map = 37%,  reduce = 0%, Cumulative CPU 46.78 sec
2020-08-06 02:39:18,193 Stage-2 map = 54%,  reduce = 0%, Cumulative CPU 53.11 sec
2020-08-06 02:39:19,230 Stage-2 map = 56%,  reduce = 0%, Cumulative CPU 60.06 sec
2020-08-06 02:39:24,973 Stage-2 map = 57%,  reduce = 0%, Cumulative CPU 60.06 sec
2020-08-06 02:39:31,516 Stage-2 map = 59%,  reduce = 0%, Cumulative CPU 73.34 sec
2020-08-06 02:39:37,830 Stage-2 map = 60%,  reduce = 0%, Cumulative CPU 79.85 sec
2020-08-06 02:39:38,880 Stage-2 map = 60%,  reduce = 17%, Cumulative CPU 80.39 sec
2020-08-06 02:39:43,105 Stage-2 map = 62%,  reduce = 17%, Cumulative CPU 87.72 sec
2020-08-06 02:39:49,376 Stage-2 map = 63%,  reduce = 17%, Cumulative CPU 93.5 sec
2020-08-06 02:39:55,664 Stage-2 map = 65%,  reduce = 17%, Cumulative CPU 101.23 sec
2020-08-06 02:40:01,950 Stage-2 map = 67%,  reduce = 17%, Cumulative CPU 107.02 sec
2020-08-06 02:40:07,159 Stage-2 map = 69%,  reduce = 17%, Cumulative CPU 114.61 sec
2020-08-06 02:40:13,423 Stage-2 map = 70%,  reduce = 17%, Cumulative CPU 120.4 sec
2020-08-06 02:40:19,753 Stage-2 map = 72%,  reduce = 17%, Cumulative CPU 128.09 sec
2020-08-06 02:40:26,039 Stage-2 map = 74%,  reduce = 17%, Cumulative CPU 134.07 sec
2020-08-06 02:40:37,533 Stage-2 map = 77%,  reduce = 17%, Cumulative CPU 148.38 sec
2020-08-06 02:40:50,082 Stage-2 map = 80%,  reduce = 17%, Cumulative CPU 162.27 sec
2020-08-06 02:41:01,525 Stage-2 map = 83%,  reduce = 17%, Cumulative CPU 176.42 sec
2020-08-06 02:41:14,007 Stage-2 map = 85%,  reduce = 17%, Cumulative CPU 188.79 sec
2020-08-06 02:41:20,280 Stage-2 map = 86%,  reduce = 17%, Cumulative CPU 194.86 sec
2020-08-06 02:41:26,542 Stage-2 map = 88%,  reduce = 17%, Cumulative CPU 200.97 sec
2020-08-06 02:41:31,721 Stage-2 map = 89%,  reduce = 17%, Cumulative CPU 207.05 sec
2020-08-06 02:41:37,950 Stage-2 map = 91%,  reduce = 17%, Cumulative CPU 213.13 sec
2020-08-06 02:41:44,196 Stage-2 map = 92%,  reduce = 17%, Cumulative CPU 219.36 sec
2020-08-06 02:41:50,461 Stage-2 map = 94%,  reduce = 17%, Cumulative CPU 225.46 sec
2020-08-06 02:41:56,685 Stage-2 map = 96%,  reduce = 17%, Cumulative CPU 231.62 sec
2020-08-06 02:42:01,866 Stage-2 map = 97%,  reduce = 17%, Cumulative CPU 237.72 sec
2020-08-06 02:42:08,092 Stage-2 map = 99%,  reduce = 17%, Cumulative CPU 243.76 sec
2020-08-06 02:42:13,308 Stage-2 map = 100%,  reduce = 17%, Cumulative CPU 248.66 sec
2020-08-06 02:42:21,615 Stage-2 map = 100%,  reduce = 67%, Cumulative CPU 255.07 sec
2020-08-06 02:42:34,068 Stage-2 map = 100%,  reduce = 69%, Cumulative CPU 269.63 sec
2020-08-06 02:42:40,276 Stage-2 map = 100%,  reduce = 72%, Cumulative CPU 275.88 sec
2020-08-06 02:42:46,466 Stage-2 map = 100%,  reduce = 74%, Cumulative CPU 281.85 sec
2020-08-06 02:42:52,661 Stage-2 map = 100%,  reduce = 76%, Cumulative CPU 287.87 sec
2020-08-06 02:42:58,849 Stage-2 map = 100%,  reduce = 79%, Cumulative CPU 293.91 sec
2020-08-06 02:43:04,019 Stage-2 map = 100%,  reduce = 81%, Cumulative CPU 299.94 sec
2020-08-06 02:43:10,199 Stage-2 map = 100%,  reduce = 83%, Cumulative CPU 305.99 sec
2020-08-06 02:43:16,384 Stage-2 map = 100%,  reduce = 86%, Cumulative CPU 312.02 sec
2020-08-06 02:43:22,589 Stage-2 map = 100%,  reduce = 88%, Cumulative CPU 318.08 sec
2020-08-06 02:43:28,775 Stage-2 map = 100%,  reduce = 90%, Cumulative CPU 324.15 sec
2020-08-06 02:43:34,963 Stage-2 map = 100%,  reduce = 92%, Cumulative CPU 330.21 sec
2020-08-06 02:43:41,149 Stage-2 map = 100%,  reduce = 94%, Cumulative CPU 336.26 sec
2020-08-06 02:43:46,317 Stage-2 map = 100%,  reduce = 96%, Cumulative CPU 342.31 sec
2020-08-06 02:43:52,498 Stage-2 map = 100%,  reduce = 98%, Cumulative CPU 348.35 sec
2020-08-06 02:43:58,691 Stage-2 map = 100%,  reduce = 99%, Cumulative CPU 354.52 sec
2020-08-06 02:43:59,724 Stage-2 map = 100%,  reduce = 100%, Cumulative CPU 356.07 sec
MapReduce Total cumulative CPU time: 5 minutes 56 seconds 70 msec
Ended Job = job_1596648768923_0002
Loading data to table test_dw.acc_ip_cntry_mapp partition (acc_id=null, acc_start_dt=null)

Loaded : 1/1 partitions.
         Time taken to load dynamic partitions: 0.74 seconds
         Time taken for adding to write entity : 0.003 seconds
MapReduce Jobs Launched:
Stage-Stage-1: Map: 1  Reduce: 1   Cumulative CPU: 104.58 sec   HDFS Read: 62875822 HDFS Write: 69952521 SUCCESS
Stage-Stage-2: Map: 2  Reduce: 1   Cumulative CPU: 356.07 sec   HDFS Read: 158230735 HDFS Write: 4412601 SUCCESS
Total MapReduce CPU Time Spent: 7 minutes 40 seconds 650 msec
OK
Time taken: 481.295 seconds
